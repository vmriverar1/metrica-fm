"use strict";(()=>{var e={};e.id=1507,e.ids=[1507],e.modules={3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},13416:(e,t,r)=>{r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>f,serverHooks:()=>y,workAsyncStorage:()=>h,workUnitAsyncStorage:()=>v});var s={};r.r(s),r.d(s,{DELETE:()=>g,GET:()=>c,OPTIONS:()=>_,PUT:()=>m});var a=r(96559),n=r(48088),o=r(37719),i=r(32190),d=r(66321),u=r(70818),l=r(31075);let p="dynamic-content/careers/content.json",c=(0,d.ru)(async(e,t,{params:r})=>{try{let{id:e}=r,t=await u.Yy.readJSON(p,!0),s=t.departments||[],a=t.job_postings||[],n=s.find(t=>t.id===e);if(!n)return i.NextResponse.json({success:!1,error:"DEPARTMENT_NOT_FOUND",message:"Department not found."},{status:404});let o=a.filter(e=>e.category===n.id),d=o.filter(e=>"active"===e.status),l=o.reduce((e,t)=>e+(t.applicant_count||0),0),c=o.reduce((e,t)=>e+(t.view_count||0),0),m={...n,open_positions:d.length,total_jobs:o.length,stats:{total_applications:l,total_views:c,average_applications_per_job:o.length>0?Math.round(l/o.length):0,average_views_per_job:o.length>0?Math.round(c/o.length):0,conversion_rate:c>0?Math.round(l/c*100):0,jobs_by_level:{junior:o.filter(e=>"junior"===e.level).length,mid:o.filter(e=>"mid"===e.level).length,senior:o.filter(e=>"senior"===e.level).length,director:o.filter(e=>"director"===e.level).length},jobs_by_status:{active:o.filter(e=>"active"===e.status).length,paused:o.filter(e=>"paused"===e.status).length,closed:o.filter(e=>"closed"===e.status).length,draft:o.filter(e=>"draft"===e.status).length},jobs_by_type:{"full-time":o.filter(e=>"full-time"===e.type).length,"part-time":o.filter(e=>"part-time"===e.type).length,contract:o.filter(e=>"contract"===e.type).length,internship:o.filter(e=>"internship"===e.type).length}},jobs:o.sort((e,t)=>new Date(t.posted_date).getTime()-new Date(e.posted_date).getTime()).map(e=>({id:e.id,title:e.title,slug:e.slug,level:e.level,type:e.type,status:e.status,location:e.location,posted_date:e.posted_date,deadline:e.deadline,applicant_count:e.applicant_count,view_count:e.view_count,featured:e.featured,urgent:e.urgent,short_description:e.short_description,tags:e.tags}))};return i.NextResponse.json({success:!0,data:{department:m}})}catch(e){return await l.vF.error("careers-api",`Failed to get department: ${r.id}`,e,{userId:t.user.id}),i.NextResponse.json({success:!1,error:"INTERNAL_ERROR",message:"Failed to retrieve department."},{status:500})}},(0,d.PS)("careers","read")()),m=(0,d.ru)(async(e,t,{params:r})=>{try{let{id:s}=r,{name:a,slug:n,description:o,detailed_description:d,icon:c,color:m,open_positions:g,total_employees:_,growth_rate:f,featured:h,required_skills:v,career_path:y,typical_projects:x,positions:N}=await e.json();if(!a||!o)return i.NextResponse.json({success:!1,error:"INVALID_INPUT",message:"Name and description are required."},{status:400});let w=await u.Yy.readJSON(p,!0),j=w.departments||[],R=j.findIndex(e=>e.id===s);if(-1===R)return i.NextResponse.json({success:!1,error:"DEPARTMENT_NOT_FOUND",message:"Department not found."},{status:404});let T=j[R];if(n&&n!==T.slug&&j.find(e=>e.slug===n&&e.id!==s))return i.NextResponse.json({success:!1,error:"SLUG_EXISTS",message:"A department with this slug already exists."},{status:409});let E={...T,name:a,slug:n||T.slug,description:o,detailed_description:void 0!==d?d:T.detailed_description,icon:void 0!==c?c:T.icon,color:void 0!==m?m:T.color,open_positions:void 0!==g?Number(g):T.open_positions,total_employees:void 0!==_?Number(_):T.total_employees,growth_rate:void 0!==f?f:T.growth_rate,featured:void 0!==h?!!h:T.featured,required_skills:void 0!==v?Array.isArray(v)?v:[]:T.required_skills,career_path:void 0!==y?y:T.career_path,typical_projects:void 0!==x?Array.isArray(x)?x:[]:T.typical_projects,positions:void 0!==N?Array.isArray(N)?N:[]:T.positions,updated_at:new Date().toISOString(),updated_by:t.user.id};j[R]=E;let A={...w,departments:j,metadata:{...w.metadata,total_departments:j.length,last_updated:new Date().toISOString()}};return await u.Yy.writeJSON(p,A,{validate:!0,backup:!0}),await l.vF.audit({action:"update",resource:"career-department",resourceId:s,message:`Career department '${a}' updated`,user:t.user.id,ip_address:e.headers.get("x-forwarded-for")||"unknown",metadata:{name:a,slug:E.slug,featured:h}}),i.NextResponse.json({success:!0,message:"Department updated successfully.",data:{department:E}})}catch(e){return await l.vF.error("careers-api",`Failed to update department: ${r.id}`,e,{userId:t.user.id}),i.NextResponse.json({success:!1,error:"INTERNAL_ERROR",message:"Failed to update department."},{status:500})}},(0,d.PS)("careers","write")()),g=(0,d.ru)(async(e,t,{params:r})=>{try{let{id:s}=r,a=await u.Yy.readJSON(p,!0),n=a.departments||[],o=a.job_postings||[],d=n.findIndex(e=>e.id===s);if(-1===d)return i.NextResponse.json({success:!1,error:"DEPARTMENT_NOT_FOUND",message:"Department not found."},{status:404});let c=n[d],m=o.filter(e=>e.category===s);if(m.length>0)return i.NextResponse.json({success:!1,error:"DEPARTMENT_HAS_JOBS",message:`Cannot delete department. It has ${m.length} associated job(s). Delete or reassign the jobs first.`,data:{associated_jobs:m.map(e=>({id:e.id,title:e.title,status:e.status}))}},{status:409});n.splice(d,1);let g={...a,departments:n,metadata:{...a.metadata,total_departments:n.length,last_updated:new Date().toISOString()}};return await u.Yy.writeJSON(p,g,{validate:!0,backup:!0}),await l.vF.audit({action:"delete",resource:"career-department",resourceId:s,message:`Career department '${c.name}' deleted`,user:t.user.id,ip_address:e.headers.get("x-forwarded-for")||"unknown",metadata:{name:c.name,slug:c.slug}}),i.NextResponse.json({success:!0,message:"Department deleted successfully."})}catch(e){return await l.vF.error("careers-api",`Failed to delete department: ${r.id}`,e,{userId:t.user.id}),i.NextResponse.json({success:!1,error:"INTERNAL_ERROR",message:"Failed to delete department."},{status:500})}},(0,d.PS)("careers","delete")());async function _(){return new i.NextResponse(null,{status:200,headers:{Allow:"GET, PUT, DELETE, OPTIONS","Access-Control-Allow-Methods":"GET, PUT, DELETE, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}let f=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/admin/careers/departments/[id]/route",pathname:"/api/admin/careers/departments/[id]",filename:"route",bundlePath:"app/api/admin/careers/departments/[id]/route"},resolvedPagePath:"/root/proyectos/freelos/metrica/src/app/api/admin/careers/departments/[id]/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:h,workUnitAsyncStorage:v,serverHooks:y}=f;function x(){return(0,o.patchFetch)({workAsyncStorage:h,workUnitAsyncStorage:v})}},27910:e=>{e.exports=require("stream")},28354:e=>{e.exports=require("util")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{e.exports=require("path")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{e.exports=require("crypto")},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},79428:e=>{e.exports=require("buffer")},79748:e=>{e.exports=require("fs/promises")},94735:e=>{e.exports=require("events")}};var t=require("../../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4447,580,3205,4659,1220,6321,818],()=>r(13416));module.exports=s})();